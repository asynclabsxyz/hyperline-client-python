# coding: utf-8

"""
    Hyperline API

    DO NOT EDIT THIS FILE! 

    The version of the OpenAPI document: 0.0.1
    Contact: dev@asynclabs.xyz
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

import hyperline_client
from hyperline_client.models.pipeline_metadata_collection import PipelineMetadataCollection  # noqa: E501
from hyperline_client.rest import ApiException

class TestPipelineMetadataCollection(unittest.TestCase):
    """PipelineMetadataCollection unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test PipelineMetadataCollection
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PipelineMetadataCollection`
        """
        model = hyperline_client.models.pipeline_metadata_collection.PipelineMetadataCollection()  # noqa: E501
        if include_optional :
            return PipelineMetadataCollection(
                metadata_list = [
                    hyperline_client.models.pipeline_metadata.PipelineMetadata(
                        pipeline_name = '', 
                        org_id = 56, 
                        author_email = '', 
                        active = True, 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        last_updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        last_executed_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                    ]
            )
        else :
            return PipelineMetadataCollection(
        )
        """

    def testPipelineMetadataCollection(self):
        """Test PipelineMetadataCollection"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
